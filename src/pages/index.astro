---
import Sidebar from "../components/Sidebar.astro";
import MainContent from "../components/MainContent.astro";
import Layout from "../layouts/Layout.astro";
---

<Layout title="Chandrabhan Maurya">
	<div class="site-content">
		<div class="glassmorphism-container"></div>
		<div class="neon-object neon-object1"></div>
		<div class="neon-object neon-object2"></div>
		<div class="neon-object neon-object3"></div>
		<div class="neon-object neon-object4"></div>
		<!-- <div class="neon-object neon-object5"></div> -->
		<div class="container-wrapper">
			<div class="container">
				<Sidebar />
				<MainContent />
			</div>
		</div>

		<script>
			const sidebar = document.getElementById("sidebar");
			const content = document.getElementById("content");
			const hamburger = document.getElementById("hamburger");

			const toggleSidebar = () => {
				const isHidden = sidebar.classList.toggle("hidden");

				if (isHidden) {
					sidebar.style.display = "none"; // Hide sidebar completely
					content.classList.add("full-width"); // Add full-width class to content
				} else {
					sidebar.style.display = "block"; // Show sidebar completely
					content.classList.remove("full-width"); // Remove full-width class from content
				}
			};

			hamburger.addEventListener("click", toggleSidebar);

			window.addEventListener("resize", () => {
				if (window.innerWidth > 768) {
					sidebar.classList.remove("hidden");
					sidebar.style.display = "block";
					content.classList.remove("full-width");
				} else {
					sidebar.classList.add("hidden");
					sidebar.style.display = "none";
					content.classList.add("full-width");
				}
			});
		</script>
		<script>
			const neonObjects = document.querySelectorAll(".neon-object");

			// Initialize positions and velocities for each object
			const positions = Array.from(neonObjects).map((_, index) => ({
				x: Math.random() * (index + 1) * window.innerWidth,
				y: Math.random() * (index + 1) * window.innerHeight,
				directionX: index % 2 ? 1 : -1, // Randomly choose direction for horizontal motion
				directionY: index % 2 ? 1 : -1, // Randomly choose direction for vertical motion
				speedX: Math.random() * 10 + index + 1, // Random horizontal speed
				speedY: Math.random() * 30 + index + 0.5, // Random vertical speed
				acceleration: 0.3, // Acceleration for smoother motion
			}));

			function animate() {
				neonObjects.forEach((object, index) => {
					const {
						directionX,
						directionY,
						speedX,
						speedY,
						acceleration,
					} = positions[index];

					// Update speeds with acceleration
					positions[index].speedX += directionX * acceleration;
					positions[index].speedY += directionY * acceleration;

					// Clamp speed to a maximum value
					const maxSpeedX = Math.random() * 10 + 5; // Maximum horizontal speed
					const maxSpeedY = Math.random() * 10 + 5; // Maximum vertical speed
					positions[index].speedX = Math.min(
						Math.max(positions[index].speedX, -maxSpeedX),
						maxSpeedX,
					);
					positions[index].speedY = Math.min(
						Math.max(positions[index].speedY, -maxSpeedY),
						maxSpeedY,
					);

					// Calculate new positions
					positions[index].x += positions[index].speedX;
					positions[index].y += positions[index].speedY;

					// Reverse direction if it hits the screen edges
					if (positions[index].x > window.innerWidth - 300) {
						positions[index].directionX = -1; // Move left
					} else if (positions[index].x < 0) {
						positions[index].directionX = 1; // Move right
					}

					if (positions[index].y > window.innerHeight - 300) {
						positions[index].directionY = -1; // Move up
					} else if (positions[index].y < 0) {
						positions[index].directionY = 1; // Move down
					}

					// Apply the new position to the object
					object.style.transform = `translate(${positions[index].x}px, ${positions[index].y}px)`;
				});

				requestAnimationFrame(animate);
			}

			animate();
		</script>
	</div>

	<style>
		.site-content {
			height: 100vh;
			width: 100vw;
			overflow: hidden;
		}

		.container-wrapper {
			max-width: 540px;
			margin: 0 auto;
			padding: 0 20px;
			position: relative; /* Position relative to allow overflow */
			z-index: 1; /* Lowest z-index for wrapper */
			overflow: visible; /* Ensure overflow is visible */
		}

		.container {
			display: flex;
			min-height: 100vh;
			position: relative; /* Add relative positioning */
		}

		@media (max-width: 576px) {
			.container-wrapper {
				max-width: 100%;
			}
		}

		@media (min-width: 576px) {
			.container-wrapper {
				max-width: 540px;
			}
		}

		@media (min-width: 768px) {
			.container-wrapper {
				max-width: 720px;
			}
		}

		@media (min-width: 992px) {
			.container-wrapper {
				max-width: 960px;
			}
		}

		@media (min-width: 1200px) {
			.container-wrapper {
				max-width: 1140px;
			}
		}

		/* Glassmorphism Styles */
		.glassmorphism-container {
			position: absolute; /* Change to absolute to allow free positioning */
			top: 0; /* Align to top */
			left: 0; /* Align to left */
			width: 100vw; /* Full viewport width */
			height: 100vh; /* Full viewport height */
			backdrop-filter: blur(10px);
			/* border-radius: 20px; */
			overflow: hidden;
			z-index: 1; /* Position below other content */
			background-blend-mode: soft-light;
			background-image: url(../../public/spray.png);
			background-size: cover;

			background-position: 50%;
			background-color: rgba(5, 6, 8, 0.7);
			opacity: 0.84;
		}

		.neon-object {
			border-radius: 250px;
			filter: blur(250px) brightness(200%);
			height: 340px;
			position: absolute;
			top: 0;
			width: 340px;
/* s			border-radius: 50%; */
		}

		.neon-object1 {
			background: linear-gradient(135deg, #ff007f, #ff7f00);
			box-shadow:
				0 0 25px rgba(255, 0, 127),
				0 0 40px rgba(255, 0, 127);
		}

		.neon-object2 {
			background: linear-gradient(135deg, #00ff7f, #007fff);
			box-shadow:
				0 0 25px rgba(0, 255, 127, 0.7),
				0 0 40px rgba(0, 255, 127, 0.5);
		}

		.neon-object3 {
			background: linear-gradient(135deg, #007fff, #ff00ff);
			box-shadow:
				0 0 25px rgba(0, 127, 255, 0.7),
				0 0 40px rgba(0, 127, 255, 0.5);
		}

		.neon-object4 {
			background: linear-gradient(135deg, #ffff00, #ff00ff);
			box-shadow:
				0 0 25px rgba(255, 255, 0, 0.7),
				0 0 40px rgba(255, 255, 0, 0.5);
		}

		.neon-object5 {
			background: linear-gradient(135deg, #00ffff, #ff7f00);
			box-shadow:
				0 0 25px rgba(0, 255, 255, 0.7),
				0 0 40px rgba(0, 255, 255, 0.5);
		}
	</style>
</Layout>
